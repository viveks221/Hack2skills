openapi: 3.0.0
info:
  title: Task Management API
  version: 1.0.0
  description: API documentation for Task Management system
servers:
  - url: http://localhost:3000/user
    description: Local server
paths:
  /tasks:
    post:
      summary: Create a new task
      tags: [Tasks]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                task:
                  type: object
                  properties:
                    title:
                      type: string
                    description:
                      type: string
                    completed:
                      type: boolean
                    subtasks:
                      type: array
                      items:
                        type: object
                        properties:
                          title:
                            type: string
                          description:
                            type: string
                          completed:
                            type: boolean
      responses:
        201:
          description: Task created successfully
        400:
          description: Bad request
  /tasks/{username}:
    get:
      summary: Get all tasks for a user
      tags: [Tasks]
      parameters:
        - in: path
          name: username
          required: true
          schema:
            type: string
          description: The username of the user
      responses:
        200:
          description: A list of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
  /tasks/{username}/{taskId}:
    put:
      summary: Update a task
      tags: [Tasks]
      parameters:
        - in: path
          name: username
          required: true
          schema:
            type: string
          description: The username of the user
        - in: path
          name: taskId
          required: true
          schema:
            type: string
          description: The ID of the task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                task:
                  type: object
                  properties:
                    title:
                      type: string
                    description:
                      type: string
                    completed:
                      type: boolean
      responses:
        200:
          description: Task updated successfully
        400:
          description: Bad request
    delete:
      summary: Soft delete a task
      tags: [Tasks]
      parameters:
        - in: path
          name: username
          required: true
          schema:
            type: string
          description: The username of the user
        - in: path
          name: taskId
          required: true
          schema:
            type: string
          description: The ID of the task
      responses:
        200:
          description: Task deleted successfully
        400:
          description: Bad request
  /subtasks:
    post:
      summary: Create or update multiple subtasks for a task
      tags: [Subtasks]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                taskId:
                  type: string
                subtasks:
                  type: array
                  items:
                    type: object
                    properties:
                      _id:
                        type: string
                      title:
                        type: string
                      description:
                        type: string
                      completed:
                        type: boolean
      responses:
        201:
          description: Subtasks created/updated successfully
        400:
          description: Bad request
  /subtasks/{username}/{taskId}:
    get:
      summary: Get all subtasks for a specific task
      tags: [Subtasks]
      parameters:
        - in: path
          name: username
          required: true
          schema:
            type: string
          description: The username of the user
        - in: path
          name: taskId
          required: true
          schema:
            type: string
          description: The ID of the task
      responses:
        200:
          description: A list of subtasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subtask'
    put:
      summary: Update multiple subtasks for a task
      tags: [Subtasks]
      parameters:
        - in: path
          name: username
          required: true
          schema:
            type: string
          description: The username of the user
        - in: path
          name: taskId
          required: true
          schema:
            type: string
          description: The ID of the task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                subtasks:
                  type: array
                  items:
                    type: object
                    properties:
                      _id:
                        type: string
                      title:
                        type: string
                      description:
                        type: string
                      completed:
                        type: boolean
      responses:
        200:
          description: Subtasks updated successfully
        400:
          description: Bad request
    delete:
      summary: Soft delete multiple subtasks for a task
      tags: [Subtasks]
      parameters:
        - in: path
          name: username
          required: true
          schema:
            type: string
          description: The username of the user
        - in: path
          name: taskId
          required: true
          schema:
            type: string
          description: The ID of the task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                subtaskIds:
                  type: array
                  items:
                    type: string
      responses:
        200:
          description: Subtasks deleted successfully
        400:
          description: Bad request
components:
  schemas:
    Task:
      type: object
      properties:
        _id:
          type: string
        title:
          type: string
        description:
          type: string
        completed:
          type: boolean
        subtasks:
          type: array
          items:
            $ref: '#/components/schemas/Subtask'
    Subtask:
      type: object
      properties:
        _id:
          type: string
        title:
          type: string
        description:
          type: string
        completed:
          type: boolean
